PKG_NAME = boost
PKG_VERS = 1.63.0
PKG_EXT = tar.bz2
PKG_DIR = $(PKG_NAME)_$(subst .,_,$(PKG_VERS))
PKG_DIST_NAME = $(PKG_DIR).$(PKG_EXT)
PKG_DIST_SITE = http://sourceforge.net/projects/$(PKG_NAME)/files/$(PKG_NAME)/$(PKG_VERS)
PKG_DIST_SITE_VALUE = http://sourceforge.net/projects/$(value PKG_NAME)/files/$(value PKG_NAME)/$(value PKG_VERS)

DEPENDS = cross/bzip2 cross/zlib
DEPENDS += cross/python

NEW_VERS = 1.5.1
NEW_VERS = 1.6.0
NEW_DIST_NAME = $(PKG_NAME)_$(subst .,_,$(NEW_VERS)).$(PKG_EXT)

VALUE=10
TEST_CALL_VALUE=AA $(value VALUE)

EMPTY_CALL=11 $() 33
EMPTY_CALL2=11 $( ) 33
UNKNOW_CALL=11 $(_ aa bb) 33

ASSIGN1 = 1
ASSIGN2 += 2
ASSIGN3 ?= 3
ASSIGN4 := 4
ASSIGN5 ::= 5

HOMEPAGE = http://www.boost.org/
COMMENT  = Boost provides free peer-reviewed portable C++ source libraries.
LICENSE  = http://www.boost.org/LICENSE_1_0.txt

VALUE_WITH_COMMENT=10 11 #not12 not13

CONFIGURE_TARGET = myConfigure
COMPILE_TARGET = myCompile
INSTALL_TARGET = myInstall

#Â Build all if not told otherwise (will most likely fail)
BOOST_LIBRARIES ?= all

# Useful variables for subst
comma:= ,
empty:=
space:= $(empty) $(empty)

GNU_CONFIGURE = 1
CONFIGURE_ARGS  = --with-toolset=gcc --with-libraries=$(subst $(space),$(comma),$(sort $(BOOST_LIBRARIES))) --prefix=$(STAGING_INSTALL_PREFIX)
CONFIGURE_ARGS += --with-python=$(WORK_DIR)/../../../native/python/work-native/install/usr/local/bin/python

include ../../mk/spksrc.cross-cc.mk
-include $(WORK_DIR)/python-cc.mk

ADDRESS_MODEL = 32
ifeq ($(findstring $(ARCH),$(x64_ARCHES)),$(ARCH))
ADDRESS_MODEL = 64
endif


.PHONY: myConfigure
myConfigure:
	$(RUN) ./bootstrap.sh $(CONFIGURE_ARGS)

.PHONY: myCompile
myCompile:
	@# Recreate user-config.jam to include python-cc.mk on second run
	@rm -rf $(WORK_DIR)/$(PKG_DIR)/user-config.jam
	@echo "using gcc : `$(TC_PATH)$(TC_PREFIX)gcc -dumpversion` : $(TC_PATH)$(TC_PREFIX)g++ : <address-model>\"$(ADDRESS_MODEL)\" <cflags>\"$(CFLAGS)\" <cxxflags>\"$(CXXFLAGS)\" <linkflags>\"$(LDFLAGS)\" <link>\"shared\" ; " > $(WORK_DIR)/$(PKG_DIR)/user-config.jam
	@echo "using python : $(PYTHON_VERSION) : : $(STAGING_INSTALL_PREFIX)/$(PYTHON_INC_DIR) ;" >> $(WORK_DIR)/$(PKG_DIR)/user-config.jam
	@echo "project : requirements <cxxflags>$(OFLAGS) ;" >> $(WORK_DIR)/$(PKG_DIR)/user-config.jam
	$(RUN) ./b2 --user-config=$(WORK_DIR)/$(PKG_DIR)/user-config.jam

.PHONY: myInstall
myInstall:
	$(RUN) ./b2 --user-config=$(WORK_DIR)/$(PKG_DIR)/user-config.jam install
